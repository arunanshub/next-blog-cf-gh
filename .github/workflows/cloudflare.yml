name: Deploy to Cloudflare

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: pnpm

      - name: Cache Next.js Build
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build:cf

      - name: Deploy to Cloudflare Workers with Wrangler (production)
        id: deploy-production
        uses: cloudflare/wrangler-action@v3.14.1
        # deploying to production
        if: github.event_name != 'pull_request'
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Set Branch Name
        id: set-branch
        run: |
          BRANCH_NAME="${{ github.head_ref || github.ref_name }}"
          SANITIZED_BRANCH=$(echo "$BRANCH_NAME" | tr '[:upper:]' '[:lower:]' | sed 's/[\/_.]/-/g' | sed 's/[^a-z0-9-]//g' | sed 's/^-*//')
          echo "branch_name=$SANITIZED_BRANCH" >> $GITHUB_OUTPUT

      - name: Deploy to Cloudflare Workers with Wrangler (preview)
        id: deploy-preview
        uses: cloudflare/wrangler-action@v3.14.1
        # deploying to preview
        if: github.event_name == 'pull_request'
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          command: versions upload --preview-alias git-${{ steps.set-branch.outputs.branch_name }}

      - name: Print deployment URLs as outputs
        if: github.event_name == 'pull_request'
        run: |
          echo "preview_deployment_url=${{ steps.deploy-preview.outputs.deployment-url }}" >> $GITHUB_OUTPUT
